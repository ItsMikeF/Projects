left_join(golfer_table, by = c("Name")) %>%
bind_rows(summarise(.,
across(where(is.numeric), sum),
across(where(is.character), ~"")))
###List with lineups###
lineup_count <- 10^3
lineups <- list()
for(i in 1:lineup_count) {
lineup <- tibble(sample(golfers$Name, 6, replace = F))
names(lineup)[1] <- "Name"
lineup <- lineup %>%
left_join(golfer_table, by = c("Name")) %>%
bind_rows(summarise(.,
across(where(is.numeric), sum),
across(where(is.character), ~"")))
lineups[[i]] <- lineup
}
lineup_table <- tibble(1:lineup_count)
names(lineup_table)[1] <- "Lineup"
for(i in 1:lineup_count){
lineup_table[i,2] <- lineups[[i]][7,2]
lineup_table[i,3] <- lineups[[i]][7,3]
lineup_table[i,4] <- lineups[[i]][7,4]
lineup_table[i,5] <- lineups[[i]][7,5]
}
lineup_table <- lineup_table %>%
filter(Salary < 50000) %>%
drop_na() %>%
arrange(-Win) %>%
view(title = "lineups")
lineups_table_top <- list()
entries <- 100
for(i in 1:entries){
lineups_table_top[[i]] <- lineups[[lineup_table$Lineup[i]]]
}
###Create lineup file###
write.csv(lineups_table_top[[1]], file = "lineups.csv")
for(i in 2:entries){
write.table(tibble(lineups_table_top[[i]]), file = "lineups.csv", sep = ",", col.names = !file.exists("lineups.csv"), append = T)
}
"lineups" <- read.csv("lineups.csv")
###Next step is add player IDs and create upload ready csv###
###Check ownership###
ownership_table <- golfers %>%
select(Name, ID, Salary, Win_rank)
for(i in 1:dim(golfers)[1]){
ownership_table$own[i] <- sum(str_count(lineups$Name, ownership_table$Name[i])) / entries
}
ownership_table %>%
arrange(-own) %>%
view(title = "Golfers Own")
entries_upload <- tibble(.rows = entries)
for (i in 1:entries) {
entries_upload[,i] <- lineups$ID[(i)]
}
entries_upload[1] <- lineups$ID[1]
entries_upload <- tibble(.rows = entries)
for (i in 1:entries) {
entries_upload[,i] <- lineups$ID[(i:6)]
}
entries_upload <- tibble()
for (i in 1:entries) {
entries_upload[,i] <- lineups$ID[(i:6)]
}
entries_upload <- tibble()
for (i in 1:entries) {
entries_upload[,i] <- c(lineups$ID[(i:6)])
}
c(lineups$ID[(i:6)])
lineups$ID[(i:6)]
test <- lineups$ID[(i:6)]
rm(test)
?tibble
entries_upload <- data.frame()
for (i in 1:entries) {
entries_upload[,i] <- lineups$ID[(i:6)]
}
entries_upload <- data.frame()
for (i in 1:entries) {
entries_upload[i] <- lineups$ID[(i:6)]
}
entries_upload <- data.frame()
for (i in 1:entries) {
entries_upload[i] <- lineups$ID[(i)]
}
entries_upload <- tibble(.rows = entries)
for (i in 1:entries) {
entries_upload[i] <- lineups$ID[(i)]
}
View(entries_upload)
entries_upload <- tibble(.rows = entries)
for (i in 1:entries) {
entries_upload[i] <- lineups$ID[(i)]
}
entries_upload[1]
entries_upload[1,]
entries_upload <- tibble(.rows = entries)
for (i in 1:entries) {
entries_upload[i,1] <- lineups$ID[(i)]
entries_upload[i,2] <- lineups$ID[(i+1)]
entries_upload[i,3] <- lineups$ID[(i+2)]
entries_upload[i,4] <- lineups$ID[(i+3)]
entries_upload[i,5] <- lineups$ID[(i+4)]
entries_upload[i,6] <- lineups$ID[(i+5)]
}
View(entries_upload)
View(lineups_table_top)
entries_upload <- tibble(.rows = entries)
for (i in 1:entries) {
entries_upload[i,1] <- lineups$ID[(i)]
entries_upload[i,2] <- lineups$ID[(i+1)]
entries_upload[i,3] <- lineups$ID[(i+2)]
entries_upload[i,4] <- lineups$ID[(i+3)]
entries_upload[i,5] <- lineups$ID[(i+4)]
entries_upload[i,6] <- lineups$ID[(i+5)]
entries_upload[i,7] <- lineups$ID[(i+6)]
}
View(lineups)
entries_upload <- tibble(.rows = entries)
for (i in 1:entries) {
entries_upload[i,1] <- lineups$ID[(i+0 + (7*(i-1)))]
entries_upload[i,2] <- lineups$ID[(i+1 + (7*(i-1)))]
entries_upload[i,3] <- lineups$ID[(i+2 + (7*(i-1)))]
entries_upload[i,4] <- lineups$ID[(i+3 + (7*(i-1)))]
entries_upload[i,5] <- lineups$ID[(i+4 + (7*(i-1)))]
entries_upload[i,6] <- lineups$ID[(i+5 + (7*(i-1)))]
entries_upload[i,7] <- lineups$ID[(i+6 + (7*(i-1)))]
}
entries_upload <- tibble(.rows = entries)
for (i in 1:entries) {
entries_upload[i,1] <- lineups$ID[(i+0 + (6*(i-1)))]
entries_upload[i,2] <- lineups$ID[(i+1 + (6*(i-1)))]
entries_upload[i,3] <- lineups$ID[(i+2 + (6*(i-1)))]
entries_upload[i,4] <- lineups$ID[(i+3 + (6*(i-1)))]
entries_upload[i,5] <- lineups$ID[(i+4 + (6*(i-1)))]
entries_upload[i,6] <- lineups$ID[(i+5 + (6*(i-1)))]
entries_upload[i,7] <- lineups$ID[(i+6 + (6*(i-1)))]
}
View(entries_upload)
entries_upload[,7]
entries_upload[,-c(7)]
entries_upload <- entries_upload[,-c(7)]
names(entries_upload) <- c(1:6)
names(entries_upload) <- 1:6
names(entries_upload) <- c("1","2","3","4","5","6")
library(tidyverse)
library(ggrepel)
library(lubridate)
library(utils)
library(filesstrings)
library(xtable)
###Import CSVs###
setwd("C://Users//Mike Francis//Documents//Projects//DFS_Data//Data_Golf")
data_golf <- read.csv("datagolf_rankings_current.csv")
golf_salaries <- read.csv("DKSalaries.csv")
golf_odds <- read.csv("golf-odds-rotowire.csv", header = T)
owgr <- read.csv("owgr.csv", header = F)
###Odds Adjustments###
golf_odds <- golf_odds[-c(1),-c(3,5,7:17)]
names(golf_odds) <- c("Golfer", "Win", "Top 5", "Top 20")
golf_odds[,c(2:4)] <- sapply(golf_odds[,c(2:4)], as.numeric)
convert_ML <- function(odds) {
breakeven <- if_else(odds > 0, 100 / (100 + odds), abs(odds) / (abs(odds) + 100))
return(round(breakeven, digits = 4))
}
golf_odds[,c(2:4)] <- sapply(golf_odds[,c(2:4)], convert_ML)
###Data Golf Adjustments###
data_golf <- data_golf[,-c(2,3,8)]
data_golf <- data_golf %>%
separate(player_name, into = c("name", "First_Name"), sep = ",")
data_golf[1] <- str_trim(paste(data_golf$First_Name, data_golf$name))
data_golf <- data_golf[,-2]
###Create golfer tibble###
golfers <- golf_salaries %>%
left_join(golf_odds, by = c("Name" = "Golfer"))
golfers <- golfers %>%
left_join(data_golf, by = c("Name" = "name"))
golfers <- golfers %>%
left_join(owgr, by = c("Name" = "V5"))
golfers <- golfers[,-c(1,5,7,8)]
golfers$AvgPointsPerGame_sd <- round((golfers$AvgPointsPerGame - mean(golfers$AvgPointsPerGame, na.rm=T)) / sd(golfers$AvgPointsPerGame, na.rm = T), digits = 2)
golfers$Win_sd <- round((golfers$Win - mean(golfers$Win, na.rm=T)) / sd(golfers$Win, na.rm = T), digits = 2)
golfers$dg_rank_sd <- round((golfers$dg_rank - mean(golfers$dg_rank, na.rm=T)) / sd(golfers$dg_rank, na.rm = T), digits = 2)
golfers$dg_change_sd <- round((golfers$dg_change - mean(golfers$dg_change, na.rm=T)) / sd(golfers$dg_change, na.rm = T), digits = 2)
golfers$sum_sd_dg <-
(0.7 * golfers$Win_sd) -
(0.2 * golfers$dg_rank_sd) +
(0.05 * golfers$dg_change_sd) +
(0.05 * golfers$AvgPointsPerGame_sd)
golfers$sum_sd <- round(
(0.95 * golfers$Win_sd) -
(0.05 * golfers$AvgPointsPerGame_sd), digits = 2)
golfers$Win_rank <- round(rank(-golfers$Win), digits =0)
golfers$sum_sd_rank <- round(rank(-golfers$sum_sd), digits =0)
golfers$sum_sd_dg_rank <- round(rank(-golfers$sum_sd_dg), digits =0)
###Create golfer table###
golfer_table <- golfers %>%
select(Name, ID, Salary, AvgPointsPerGame, Win, Win_rank) %>%
drop_na(Win)
lineup <- tibble(sample(golfers$Name, 6, replace = F))
names(lineup)[1] <- "Name"
lineup <- lineup %>%
left_join(golfer_table, by = c("Name")) %>%
bind_rows(summarise(.,
across(where(is.numeric), sum),
across(where(is.character), ~"")))
###List with lineups###
lineup_count <- 10^4
lineups <- list()
for(i in 1:lineup_count) {
lineup <- tibble(sample(golfers$Name, 6, replace = F))
names(lineup)[1] <- "Name"
lineup <- lineup %>%
left_join(golfer_table, by = c("Name")) %>%
bind_rows(summarise(.,
across(where(is.numeric), sum),
across(where(is.character), ~"")))
lineups[[i]] <- lineup
}
lineup_table <- tibble(1:lineup_count)
names(lineup_table)[1] <- "Lineup"
for(i in 1:lineup_count){
lineup_table[i,2] <- lineups[[i]][7,2]
lineup_table[i,3] <- lineups[[i]][7,3]
lineup_table[i,4] <- lineups[[i]][7,4]
lineup_table[i,5] <- lineups[[i]][7,5]
}
lineup_table <- lineup_table %>%
filter(Salary < 50000) %>%
drop_na() %>%
arrange(-Win) %>%
view(title = "lineups")
lineups_table_top <- list()
entries <- 20
for(i in 1:entries){
lineups_table_top[[i]] <- lineups[[lineup_table$Lineup[i]]]
}
###Create lineup file###
write.csv(lineups_table_top[[1]], file = "lineups.csv")
for(i in 2:entries){
write.table(tibble(lineups_table_top[[i]]), file = "lineups.csv", sep = ",", col.names = !file.exists("lineups.csv"), append = T)
}
"lineups" <- read.csv("lineups.csv")
###Next step is add player IDs and create upload ready csv###
###Check ownership###
ownership_table <- golfers %>%
select(Name, ID, Salary, Win_rank)
for(i in 1:dim(golfers)[1]){
ownership_table$own[i] <- sum(str_count(lineups$Name, ownership_table$Name[i])) / entries
}
ownership_table %>%
arrange(-own) %>%
view(title = "Golfers Own")
entries_upload <- tibble()
entries_upload <- tibble(.rows = entries)
for (i in 1:entries) {
entries_upload[i,1] <- lineups$ID[(i+0 + (6*(i-1)))]
entries_upload[i,2] <- lineups$ID[(i+1 + (6*(i-1)))]
entries_upload[i,3] <- lineups$ID[(i+2 + (6*(i-1)))]
entries_upload[i,4] <- lineups$ID[(i+3 + (6*(i-1)))]
entries_upload[i,5] <- lineups$ID[(i+4 + (6*(i-1)))]
entries_upload[i,6] <- lineups$ID[(i+5 + (6*(i-1)))]
entries_upload[i,7] <- lineups$ID[(i+6 + (6*(i-1)))]
}
entries_upload <- entries_upload[,-c(7)]
names(entries_upload) <- c("1","2","3","4","5","6")
library(tidyverse)
library(ggrepel)
library(lubridate)
library(utils)
library(filesstrings)
library(xtable)
###Import CSVs###
setwd("C://Users//Mike Francis//Documents//Projects//DFS_Data//Data_Golf")
data_golf <- read.csv("datagolf_rankings_current.csv")
golf_salaries <- read.csv("DKSalaries.csv")
golf_odds <- read.csv("golf-odds-rotowire.csv", header = T)
owgr <- read.csv("owgr.csv", header = F)
###Odds Adjustments###
golf_odds <- golf_odds[-c(1),-c(3,5,7:17)]
names(golf_odds) <- c("Golfer", "Win", "Top 5", "Top 20")
golf_odds[,c(2:4)] <- sapply(golf_odds[,c(2:4)], as.numeric)
convert_ML <- function(odds) {
breakeven <- if_else(odds > 0, 100 / (100 + odds), abs(odds) / (abs(odds) + 100))
return(round(breakeven, digits = 4))
}
golf_odds[,c(2:4)] <- sapply(golf_odds[,c(2:4)], convert_ML)
###Data Golf Adjustments###
data_golf <- data_golf[,-c(2,3,8)]
data_golf <- data_golf %>%
separate(player_name, into = c("name", "First_Name"), sep = ",")
data_golf[1] <- str_trim(paste(data_golf$First_Name, data_golf$name))
data_golf <- data_golf[,-2]
###Create golfer tibble###
golfers <- golf_salaries %>%
left_join(golf_odds, by = c("Name" = "Golfer"))
golfers <- golfers %>%
left_join(data_golf, by = c("Name" = "name"))
golfers <- golfers %>%
left_join(owgr, by = c("Name" = "V5"))
golfers <- golfers[,-c(1,5,7,8)]
golfers$AvgPointsPerGame_sd <- round((golfers$AvgPointsPerGame - mean(golfers$AvgPointsPerGame, na.rm=T)) / sd(golfers$AvgPointsPerGame, na.rm = T), digits = 2)
golfers$Win_sd <- round((golfers$Win - mean(golfers$Win, na.rm=T)) / sd(golfers$Win, na.rm = T), digits = 2)
golfers$dg_rank_sd <- round((golfers$dg_rank - mean(golfers$dg_rank, na.rm=T)) / sd(golfers$dg_rank, na.rm = T), digits = 2)
golfers$dg_change_sd <- round((golfers$dg_change - mean(golfers$dg_change, na.rm=T)) / sd(golfers$dg_change, na.rm = T), digits = 2)
golfers$sum_sd_dg <-
(0.7 * golfers$Win_sd) -
(0.2 * golfers$dg_rank_sd) +
(0.05 * golfers$dg_change_sd) +
(0.05 * golfers$AvgPointsPerGame_sd)
golfers$sum_sd <- round(
(0.95 * golfers$Win_sd) -
(0.05 * golfers$AvgPointsPerGame_sd), digits = 2)
golfers$Win_rank <- round(rank(-golfers$Win), digits =0)
golfers$sum_sd_rank <- round(rank(-golfers$sum_sd), digits =0)
golfers$sum_sd_dg_rank <- round(rank(-golfers$sum_sd_dg), digits =0)
###Create golfer table###
golfer_table <- golfers %>%
select(Name, ID, Salary, AvgPointsPerGame, Win, Win_rank) %>%
drop_na(Win)
lineup <- tibble(sample(golfers$Name, 6, replace = F))
names(lineup)[1] <- "Name"
lineup <- lineup %>%
left_join(golfer_table, by = c("Name")) %>%
bind_rows(summarise(.,
across(where(is.numeric), sum),
across(where(is.character), ~"")))
###List with lineups###
lineup_count <- 10^3
lineups <- list()
for(i in 1:lineup_count) {
lineup <- tibble(sample(golfers$Name, 6, replace = F))
names(lineup)[1] <- "Name"
lineup <- lineup %>%
left_join(golfer_table, by = c("Name")) %>%
bind_rows(summarise(.,
across(where(is.numeric), sum),
across(where(is.character), ~"")))
lineups[[i]] <- lineup
}
lineup_table <- tibble(1:lineup_count)
names(lineup_table)[1] <- "Lineup"
for(i in 1:lineup_count){
lineup_table[i,2] <- lineups[[i]][7,2]
lineup_table[i,3] <- lineups[[i]][7,3]
lineup_table[i,4] <- lineups[[i]][7,4]
lineup_table[i,5] <- lineups[[i]][7,5]
}
lineup_table <- lineup_table %>%
filter(Salary < 50000) %>%
drop_na() %>%
arrange(-Win) %>%
view(title = "lineups")
lineups_table_top <- list()
entries <- 20
for(i in 1:entries){
lineups_table_top[[i]] <- lineups[[lineup_table$Lineup[i]]]
}
###Create lineup file###
write.csv(lineups_table_top[[1]], file = "lineups.csv")
for(i in 2:entries){
write.table(tibble(lineups_table_top[[i]]), file = "lineups.csv", sep = ",", col.names = !file.exists("lineups.csv"), append = T)
}
"lineups" <- read.csv("lineups.csv")
###Next step is add player IDs and create upload ready csv###
###Check ownership###
ownership_table <- golfers %>%
select(Name, ID, Salary, Win_rank)
for(i in 1:dim(golfers)[1]){
ownership_table$own[i] <- sum(str_count(lineups$Name, ownership_table$Name[i])) / entries
}
ownership_table %>%
arrange(-own) %>%
view(title = "Golfers Own")
entries_upload <- tibble()
entries_upload <- tibble(.rows = entries)
for (i in 1:entries) {
entries_upload[i,1] <- lineups$ID[(i+0 + (6*(i-1)))]
entries_upload[i,2] <- lineups$ID[(i+1 + (6*(i-1)))]
entries_upload[i,3] <- lineups$ID[(i+2 + (6*(i-1)))]
entries_upload[i,4] <- lineups$ID[(i+3 + (6*(i-1)))]
entries_upload[i,5] <- lineups$ID[(i+4 + (6*(i-1)))]
entries_upload[i,6] <- lineups$ID[(i+5 + (6*(i-1)))]
entries_upload[i,7] <- lineups$ID[(i+6 + (6*(i-1)))]
}
entries_upload <- entries_upload[,-c(7)]
names(entries_upload) <- c("1","2","3","4","5","6")
library(tidyverse)
library(ggrepel)
library(lubridate)
library(utils)
library(filesstrings)
library(xtable)
###Import CSVs###
setwd("C://Users//Mike Francis//Documents//Projects//DFS_Data//Data_Golf")
data_golf <- read.csv("datagolf_rankings_current.csv")
golf_salaries <- read.csv("DKSalaries.csv")
golf_odds <- read.csv("golf-odds-rotowire.csv", header = T)
owgr <- read.csv("owgr.csv", header = F)
###Odds Adjustments###
golf_odds <- golf_odds[-c(1),-c(3,5,7:17)]
names(golf_odds) <- c("Golfer", "Win", "Top 5", "Top 20")
golf_odds[,c(2:4)] <- sapply(golf_odds[,c(2:4)], as.numeric)
convert_ML <- function(odds) {
breakeven <- if_else(odds > 0, 100 / (100 + odds), abs(odds) / (abs(odds) + 100))
return(round(breakeven, digits = 4))
}
golf_odds[,c(2:4)] <- sapply(golf_odds[,c(2:4)], convert_ML)
###Data Golf Adjustments###
data_golf <- data_golf[,-c(2,3,8)]
data_golf <- data_golf %>%
separate(player_name, into = c("name", "First_Name"), sep = ",")
data_golf[1] <- str_trim(paste(data_golf$First_Name, data_golf$name))
data_golf <- data_golf[,-2]
###Create golfer tibble###
golfers <- golf_salaries %>%
left_join(golf_odds, by = c("Name" = "Golfer"))
golfers <- golfers %>%
left_join(data_golf, by = c("Name" = "name"))
golfers <- golfers %>%
left_join(owgr, by = c("Name" = "V5"))
golfers <- golfers[,-c(1,5,7,8)]
golfers$AvgPointsPerGame_sd <- round((golfers$AvgPointsPerGame - mean(golfers$AvgPointsPerGame, na.rm=T)) / sd(golfers$AvgPointsPerGame, na.rm = T), digits = 2)
golfers$Win_sd <- round((golfers$Win - mean(golfers$Win, na.rm=T)) / sd(golfers$Win, na.rm = T), digits = 2)
golfers$dg_rank_sd <- round((golfers$dg_rank - mean(golfers$dg_rank, na.rm=T)) / sd(golfers$dg_rank, na.rm = T), digits = 2)
golfers$dg_change_sd <- round((golfers$dg_change - mean(golfers$dg_change, na.rm=T)) / sd(golfers$dg_change, na.rm = T), digits = 2)
golfers$sum_sd_dg <-
(0.7 * golfers$Win_sd) -
(0.2 * golfers$dg_rank_sd) +
(0.05 * golfers$dg_change_sd) +
(0.05 * golfers$AvgPointsPerGame_sd)
golfers$sum_sd <- round(
(0.95 * golfers$Win_sd) -
(0.05 * golfers$AvgPointsPerGame_sd), digits = 2)
golfers$Win_rank <- round(rank(-golfers$Win), digits =0)
golfers$sum_sd_rank <- round(rank(-golfers$sum_sd), digits =0)
golfers$sum_sd_dg_rank <- round(rank(-golfers$sum_sd_dg), digits =0)
###Create golfer table###
golfer_table <- golfers %>%
select(Name, ID, Salary, AvgPointsPerGame, Win, Win_rank) %>%
drop_na(Win)
lineup <- tibble(sample(golfers$Name, 6, replace = F))
names(lineup)[1] <- "Name"
lineup <- lineup %>%
left_join(golfer_table, by = c("Name")) %>%
bind_rows(summarise(.,
across(where(is.numeric), sum),
across(where(is.character), ~"")))
###List with lineups###
lineup_count <- 10^6
lineups <- list()
for(i in 1:lineup_count) {
lineup <- tibble(sample(golfers$Name, 6, replace = F))
names(lineup)[1] <- "Name"
lineup <- lineup %>%
left_join(golfer_table, by = c("Name")) %>%
bind_rows(summarise(.,
across(where(is.numeric), sum),
across(where(is.character), ~"")))
lineups[[i]] <- lineup
}
lineup_table <- tibble(1:lineup_count)
names(lineup_table)[1] <- "Lineup"
for(i in 1:lineup_count){
lineup_table[i,2] <- lineups[[i]][7,2]
lineup_table[i,3] <- lineups[[i]][7,3]
lineup_table[i,4] <- lineups[[i]][7,4]
lineup_table[i,5] <- lineups[[i]][7,5]
}
lineup_table <- lineup_table %>%
filter(Salary < 50000) %>%
drop_na() %>%
arrange(-Win) %>%
view(title = "lineups")
lineups_table_top <- list()
entries <- 20
for(i in 1:entries){
lineups_table_top[[i]] <- lineups[[lineup_table$Lineup[i]]]
}
###Create lineup file###
write.csv(lineups_table_top[[1]], file = "lineups.csv")
for(i in 2:entries){
write.table(tibble(lineups_table_top[[i]]), file = "lineups.csv", sep = ",", col.names = !file.exists("lineups.csv"), append = T)
}
"lineups" <- read.csv("lineups.csv")
###Next step is add player IDs and create upload ready csv###
###Check ownership###
ownership_table <- golfers %>%
select(Name, ID, Salary, Win_rank)
for(i in 1:dim(golfers)[1]){
ownership_table$own[i] <- sum(str_count(lineups$Name, ownership_table$Name[i])) / entries
}
ownership_table %>%
arrange(-own) %>%
view(title = "Golfers Own")
entries_upload <- tibble()
entries_upload <- tibble(.rows = entries)
for (i in 1:entries) {
entries_upload[i,1] <- lineups$ID[(i+0 + (6*(i-1)))]
entries_upload[i,2] <- lineups$ID[(i+1 + (6*(i-1)))]
entries_upload[i,3] <- lineups$ID[(i+2 + (6*(i-1)))]
entries_upload[i,4] <- lineups$ID[(i+3 + (6*(i-1)))]
entries_upload[i,5] <- lineups$ID[(i+4 + (6*(i-1)))]
entries_upload[i,6] <- lineups$ID[(i+5 + (6*(i-1)))]
entries_upload[i,7] <- lineups$ID[(i+6 + (6*(i-1)))]
}
entries_upload <- entries_upload[,-c(7)]
names(entries_upload) <- c("1","2","3","4","5","6")
View(entries_upload)
write.csv(entries_upload)
?write.csv
write.csv(entries_upload, file = "entries_upload.csv")
